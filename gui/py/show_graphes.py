# Form implementation generated from reading ui file 'show_graphes_2.ui'
#
# Created by: PyQt6 UI code generator 6.5.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from datetime import datetime
from tkinter import messagebox
from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_AccountingGraphs(object):
    
    def setupUi(self, primary):
        self.centralwidget = QtWidgets.QWidget(parent=primary.MainWindow)
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.frame = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.gridLayout_2 = QtWidgets.QGridLayout(self.frame)
        self.label_18 = QtWidgets.QLabel(parent=self.frame)
        font = QtGui.QFont()
        font.setPointSize(19)
        self.label_18.setFont(font)
        self.label_18.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.gridLayout_2.addWidget(self.label_18, 0, 0, 1, 1)
        self.horizontalLayout_32 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_32.setContentsMargins(-1, -1, -1, 0)
        self.horizontalLayout_32.setSpacing(7)
        self.verticalLayout_24 = QtWidgets.QVBoxLayout()
        self.prev_month_ttl = QtWidgets.QLabel(parent=self.frame)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.prev_month_ttl.setFont(font)
        prev_month_desc1 = primary.lang_file.get_page_text("accounting_graphs_page", "prev_month_desc1")
        prev_month_desc2 = primary.lang_file.get_page_text("accounting_graphs_page", "prev_month_desc2")
        self.prev_month_ttl.setToolTip(f"{prev_month_desc1}\n"
f"{prev_month_desc2}")
        self.prev_month_ttl.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.verticalLayout_24.addWidget(self.prev_month_ttl)
        self.horizontalLayout_33 = QtWidgets.QHBoxLayout()
        spacerItem = QtWidgets.QSpacerItem(13, 16, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_33.addItem(spacerItem)
        self.expt_prev_month_radio = QtWidgets.QRadioButton(parent=self.frame)
        self.horizontalLayout_33.addWidget(self.expt_prev_month_radio)
        spacerItem1 = QtWidgets.QSpacerItem(13, 16, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_33.addItem(spacerItem1)
        self.verticalLayout_24.addLayout(self.horizontalLayout_33)
        self.horizontalLayout_32.addLayout(self.verticalLayout_24)
        self.verticalLayout_25 = QtWidgets.QVBoxLayout()
        self.prev_trim_ttl = QtWidgets.QLabel(parent=self.frame)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.prev_trim_ttl.setFont(font)
        prev_trim_desc1 = primary.lang_file.get_page_text("accounting_graphs_page", "prev_trim_desc1")
        prev_trim_desc2 = primary.lang_file.get_page_text("accounting_graphs_page", "prev_trim_desc2")
        self.prev_trim_ttl.setToolTip(f"{prev_trim_desc1}\n"
f"{prev_trim_desc2}")
        self.prev_trim_ttl.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.verticalLayout_25.addWidget(self.prev_trim_ttl)
        self.horizontalLayout_34 = QtWidgets.QHBoxLayout()
        spacerItem2 = QtWidgets.QSpacerItem(13, 16, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_34.addItem(spacerItem2)
        self.expt_prev_trim_radio = QtWidgets.QRadioButton(parent=self.frame)
        self.horizontalLayout_34.addWidget(self.expt_prev_trim_radio)
        spacerItem3 = QtWidgets.QSpacerItem(13, 16, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_34.addItem(spacerItem3)
        self.verticalLayout_25.addLayout(self.horizontalLayout_34)
        self.horizontalLayout_32.addLayout(self.verticalLayout_25)
        self.verticalLayout_26 = QtWidgets.QVBoxLayout()
        self.expt_month_ttl = QtWidgets.QLabel(parent=self.frame)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.expt_month_ttl.setFont(font)
        expt_month_desc1 = primary.lang_file.get_page_text("accounting_graphs_page", "expt_month_desc1")
        expt_month_desc2 = primary.lang_file.get_page_text("accounting_graphs_page", "expt_month_desc2")
        self.expt_month_ttl.setToolTip(f"{expt_month_desc1}\n"
f"{expt_month_desc2}")
        self.expt_month_ttl.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.verticalLayout_26.addWidget(self.expt_month_ttl)
        self.horizontalLayout_35 = QtWidgets.QHBoxLayout()
        spacerItem4 = QtWidgets.QSpacerItem(13, 16, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_35.addItem(spacerItem4)
        self.expt_month_radio = QtWidgets.QRadioButton(parent=self.frame)
        self.horizontalLayout_35.addWidget(self.expt_month_radio)
        spacerItem5 = QtWidgets.QSpacerItem(13, 16, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_35.addItem(spacerItem5)
        self.verticalLayout_26.addLayout(self.horizontalLayout_35)
        self.horizontalLayout_32.addLayout(self.verticalLayout_26)
        self.verticalLayout_27 = QtWidgets.QVBoxLayout()
        self.expt_trims_ttl = QtWidgets.QLabel(parent=self.frame)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.expt_trims_ttl.setFont(font)
        expt_trims_desc1 = primary.lang_file.get_page_text("accounting_graphs_page", "expt_trims_desc1")
        expt_trims_desc2 = primary.lang_file.get_page_text("accounting_graphs_page", "expt_trims_desc2")
        expt_trims_desc3 = primary.lang_file.get_page_text("accounting_graphs_page", "expt_trims_desc3")
        self.expt_trims_ttl.setToolTip(f"{expt_trims_desc1}\n"
f"{expt_trims_desc2}\n"
f"{expt_trims_desc3}")
        self.expt_trims_ttl.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.verticalLayout_27.addWidget(self.expt_trims_ttl)
        self.horizontalLayout_36 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_36.setContentsMargins(-1, 0, -1, 0)
        spacerItem6 = QtWidgets.QSpacerItem(13, 16, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_36.addItem(spacerItem6)
        self.expt_trims_radio = QtWidgets.QRadioButton(parent=self.frame)
        self.horizontalLayout_36.addWidget(self.expt_trims_radio)
        spacerItem7 = QtWidgets.QSpacerItem(13, 16, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_36.addItem(spacerItem7)
        self.verticalLayout_27.addLayout(self.horizontalLayout_36)
        self.horizontalLayout_32.addLayout(self.verticalLayout_27)
        self.verticalLayout_28 = QtWidgets.QVBoxLayout()
        self.expt_months_ttl = QtWidgets.QLabel(parent=self.frame)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.expt_months_ttl.setFont(font)
        expt_months_desc1 = primary.lang_file.get_page_text("accounting_graphs_page", "expt_months_desc1")
        expt_months_desc2 = primary.lang_file.get_page_text("accounting_graphs_page", "expt_months_desc2")
        expt_months_desc3 = primary.lang_file.get_page_text("accounting_graphs_page", "expt_months_desc3")
        self.expt_months_ttl.setToolTip(f"{expt_months_desc1}\n"
f"{expt_months_desc2}\n"
f"{expt_months_desc3}")
        self.expt_months_ttl.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.verticalLayout_28.addWidget(self.expt_months_ttl)
        self.horizontalLayout_37 = QtWidgets.QHBoxLayout()
        spacerItem8 = QtWidgets.QSpacerItem(13, 16, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_37.addItem(spacerItem8)
        self.expt_months_radio = QtWidgets.QRadioButton(parent=self.frame)
        self.horizontalLayout_37.addWidget(self.expt_months_radio)
        spacerItem9 = QtWidgets.QSpacerItem(13, 16, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_37.addItem(spacerItem9)
        self.verticalLayout_28.addLayout(self.horizontalLayout_37)
        self.horizontalLayout_32.addLayout(self.verticalLayout_28)
        self.gridLayout_2.addLayout(self.horizontalLayout_32, 4, 0, 1, 1)
        self.horizontalLayout_38 = QtWidgets.QHBoxLayout()
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_38.addItem(spacerItem10)
        self.export_ttl = QtWidgets.QPushButton(parent=self.frame)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setKerning(False)
        font.setStyleStrategy(QtGui.QFont.StyleStrategy.PreferDefault)
        self.export_ttl.setFont(font)
        self.horizontalLayout_38.addWidget(self.export_ttl)
        spacerItem11 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_38.addItem(spacerItem11)
        self.gridLayout_2.addLayout(self.horizontalLayout_38, 6, 0, 1, 1)
        spacerItem12 = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_2.addItem(spacerItem12, 5, 0, 1, 1)
        spacerItem13 = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_2.addItem(spacerItem13, 1, 0, 1, 1)
        self.horizontalLayout_25 = QtWidgets.QHBoxLayout()
        spacerItem14 = QtWidgets.QSpacerItem(40, 10, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_25.addItem(spacerItem14)
        self.calendarWidget_4 = QtWidgets.QCalendarWidget(parent=self.frame)
        self.calendarWidget_4.setMinimumSize(QtCore.QSize(0, 235))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.calendarWidget_4.setFont(font)
        self.calendarWidget_4.setMinimumDate(QtCore.QDate(2007, 12, 31))
        self.calendarWidget_4.setFirstDayOfWeek(QtCore.Qt.DayOfWeek.Monday)
        self.calendarWidget_4.setHorizontalHeaderFormat(QtWidgets.QCalendarWidget.HorizontalHeaderFormat.ShortDayNames)
        self.calendarWidget_4.setVerticalHeaderFormat(QtWidgets.QCalendarWidget.VerticalHeaderFormat.NoVerticalHeader)
        self.calendarWidget_4.setNavigationBarVisible(True)
        self.horizontalLayout_25.addWidget(self.calendarWidget_4)
        spacerItem15 = QtWidgets.QSpacerItem(40, 10, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_25.addItem(spacerItem15)
        self.gridLayout_2.addLayout(self.horizontalLayout_25, 2, 0, 1, 1)
        spacerItem16 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_2.addItem(spacerItem16, 3, 0, 1, 1)
        spacerItem17 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout_2.addItem(spacerItem17, 7, 0, 1, 1)
        self.gridLayout.addWidget(self.frame, 0, 0, 1, 1)
        primary.MainWindow.setCentralWidget(self.centralwidget)

        # Mechanisms
        self.export_ttl.clicked.connect(lambda:self.export(primary))

        self.retranslateUi(primary)
        QtCore.QMetaObject.connectSlotsByName(primary.MainWindow)

    def retranslateUi(self, primary):
        self.label_18.setText("💸 " + primary.lang_file.get_page_text("accounting_graphs_page", "accounting") + " 📃")
        self.prev_month_ttl.setText(primary.lang_file.get_page_text("accounting_graphs_page", "prev_month"))
        self.prev_trim_ttl.setText(primary.lang_file.get_page_text("accounting_graphs_page", "prev_trim"))
        self.expt_month_ttl.setText(primary.lang_file.get_page_text("accounting_graphs_page", "month"))
        self.expt_trims_ttl.setText(primary.lang_file.get_page_text("accounting_graphs_page", "trimesters"))
        self.expt_months_ttl.setText(primary.lang_file.get_page_text("accounting_graphs_page", "months"))
        self.export_ttl.setText("📈 " + primary.lang_file.get_page_text("accounting_graphs_page", "export_btn"))

    def export(self, primary):
        """Exports accounting accorded to the selected option"""
        date = self.calendarWidget_4.selectedDate()
        today = datetime.now()

        wrong_date = False
        if today.year < date.year():
            wrong_date = True
        elif today.month < date.month() and today.year == date.year():
            wrong_date = True
        elif today.day < date.day() and today.month < date.month() and today.year == date.year():
            wrong_date = True
        # --- Check if the date is correct --- #
        if wrong_date:
            messagebox.showerror(primary.lang_file.get_page_text("accounting_graphs_page", "wrong_date_title"), primary.lang_file.get_page_text("accounting_graphs_page", "wrong_date_desc"))
            return
        
        if primary.not_co_vinted():
            return

        # --- Exportation --- #
        if date.day() < 10:
            date_day = f"0{date.day()}"
        else:
            date_day = date.day()
        selected_date = f"{date.year()}-{date.month()}-{date_day}"
        try:
            if self.expt_prev_month_radio.isChecked():
                prev_year, prev_month = primary.vinted_api.get_previous_month()
                primary.vinted_api.export_month_notif(prev_year, prev_month)
            elif self.expt_prev_trim_radio.isChecked():            
                primary.vinted_api.export_previous_trimester()
            elif self.expt_month_radio.isChecked():
                selected_year, selected_month = selected_date[:-3].split("-")
                primary.vinted_api.export_month_notif(selected_year, selected_month)
            elif self.expt_trims_radio.isChecked():
                primary.vinted_api.export_trimesters(selected_date)
            elif self.expt_months_radio.isChecked():
                primary.vinted_api.export_months(selected_date)
            else:
                messagebox.showerror(primary.lang_file.get_page_text("accounting_graphs_page", "no_feature_title"), primary.lang_file.get_page_text("accounting_graphs_page", "no_feature_desc"))
        except:
            primary.vinted_api.token_expired()